package esempio2;

This
class represents
a complex
number with
a real
part and
an imaginary part.*/

public class Complex {

/**

The real part of the complex number.
*/
private float realPart;
/**

The imaginary part of the complex number.
*/
private float imPart;
/**

Returns the real part of the complex number.
@return The real part of the complex number.
*/
public float getRealPart() {
return realPart;
}
/**

Sets the real part of the complex number.
@param realPart The new real part to set.
*/
protected void setRealPart(float realPart) {
this.realPart = realPart;
}
/**

Returns the imaginary part of the complex number.
@return The imaginary part of the complex number.
*/
public float getImPart() {
return imPart;
}
/**

Sets the imaginary part of the complex number.
@param imPart The new imaginary part to set.
*/
protected void setImPart(float imPart) {
this.imPart = imPart;
}
/**

Constructs a new Complex object with the given real and imaginary parts.
@param realPart The real part of the complex number.
@param imPart The imaginary part of the complex number.
*/
public Complex(float realPart, float imPart) {
setRealPart(realPart);
setImPart(imPart);
}

	public Complex sum(Complex that) {
		return new Complex(getRealPart() + that.getRealPart(), getImPart() + that.getImPart());
	}

	public Complex sub(Complex that) {
		return new Complex(getRealPart() - that.getRealPart(), getImPart() - that.getImPart());
	}

	public Complex mul(Complex that) {
		return new Complex(getRealPart() * that.getRealPart() - getImPart() * that.getImPart(),
				getImPart() * that.getRealPart() + getRealPart() * that.getImPart());
	}

	public Complex div(Complex that) {
		return mul(cgt(that)).divByFactor(that.squaredModule());
	}

	public Complex cgt(Complex z) {
		return new Complex(getRealPart(), -getImPart());
	}

	public Complex divByFactor(float x) {
		return new Complex(getRealPart() / x, getImPart() / x);
	}

	public float squaredModule() {
		return getRealPart() * getRealPart() + getImPart() * getImPart();
	}

	public String toString() {
		return "" + getRealPart() + "+i" + getImPart();
	}

}
