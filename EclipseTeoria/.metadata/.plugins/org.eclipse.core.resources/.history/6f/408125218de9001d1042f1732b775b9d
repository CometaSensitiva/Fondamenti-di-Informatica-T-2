package esempio3;

/**
 * Implementation of an equilateral triangle, which is a special case of an
 * isosceles triangle where all sides are equal. This class extends the
 * implementation of an isosceles triangle and implements the
 * EquilateralTriangle interface.
 * 
 * @author michelemazzaa
 */
public class ImplEquilateralTriangle extends ImplIsoscelesTriangle implements EquilateralTriangle {

	/**
	 * Constructor for an equilateral triangle with a given side length.
	 * 
	 * @param side the length of all sides of the equilateral triangle
	 */
	public ImplEquilateralTriangle(double side) {
		super(side, side);
	}

	/**
	 * Returns the length of the sides of the equilateral triangle.
	 * 
	 * @return the length of the sides of the equilateral triangle
	 */
	public double getSide() {
		return getSide1();
	}

	/**
	 * Returns the height of the equilateral triangle, which is equal to the length
	 * of the altitude from any vertex to the opposite side.
	 * 
	 * @return the height of the equilateral triangle
	 */
	public double getHeight() {
		return getHeight1();
	}

	/**
	 * Returns a string representation of the equilateral triangle, including its
	 * sides, angles, area, and perimeter.
	 * 
	 * @return a string representation of the equilateral triangle
	 */
	@Override
	public String toString() {
		return getName() + "[side1=" + getSide1() + ", side2=" + getSide2() + ", side3=" + getSide3()
				+ ", angleOppositeSide1=" + getAngleOppositeSide1() + ", angleOppositeSide2=" + getAngleOppositeSide2()
				+ ", angleOppositeSide3=" + getAngleOppositeSide3() + ", area" + getArea() + ", perimeter"
				+ getPerimeter() + "]";
	}

}
