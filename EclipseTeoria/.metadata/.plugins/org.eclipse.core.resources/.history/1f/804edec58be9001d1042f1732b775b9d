package esempio3;

/**
 * This class represents a right isosceles triangle, which is a triangle with
 * two equal sides and a right angle opposite the hypotenuse.
 * 
 * @author michelemazzaa
 */
public class ImplRightIsoscelesTriangle extends ImplRightTriangle {

	/**
	 * Constructs a right isosceles triangle with the given length for both sides.
	 * 
	 * @param sideLength the length of the sides of the right isosceles triangle
	 */
	public ImplRightIsoscelesTriangle(double sideLength) {
		super(sideLength, sideLength);
	}

	/**
	 * Returns the length of the base of the right isosceles triangle, which is the
	 * same as the length of the first side.
	 * 
	 * @return the length of the base of the right isosceles triangle
	 */
	public double getBase() {
		return getSide1();
	}

	/**
	 * Returns the length of the two equal sides of the right isosceles triangle,
	 * which is the same as the length of the second side.
	 * 
	 * @return the length of the two equal sides of the right isosceles triangle
	 */
	public double getSide() {
		return getSide2();
	}

	/**
	 * Returns the name of the right isosceles triangle.
	 * 
	 * @return the name of the right isosceles triangle
	 */
	@Override
	public String getName() {
		return "A Right Isosceles Triangle";
	}

	/**
	 * Returns a string representation of the right isosceles triangle, including
	 * the lengths of its sides, the measures of its angles, its area, and its
	 * perimeter.
	 * 
	 * @return a string representation of the right isosceles triangle
	 */
	@Override
	public String toString() {
		return getName() + "[side1=" + getSide1() + ", side2=" + getSide2() + ", side3=" + getSide3()
				+ ", angleOppositeSide1=" + getAngleOppositeSide1() + ", angleOppositeSide2=" + getAngleOppositeSide2()
				+ ", angleOppositeSide3=" + getAngleOppositeSide3() + ", area=" + getArea() + ", perimeter="
				+ getPerimeter() + "]";
	}
}
